{"version":3,"sources":["pages/Header.js","pages/ClassModelPertama.js","pages/ClassModelKedua.js","pages/FungsiModel1.js","pages/FungsiModel2.js","pages/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","align","Component","ClassModulPertama","props","state","keterangan","ket","this","ClassModelKedua","gambar","penjelasan","tampilkanGambar","bind","e","preventDefault","setState","width","src","alt","onClick","React","FungsiModel1","kata","alert","handlePesan","FungsiModel2","teks","Footer","App","ClassModelPertama","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2NAYeA,E,uKARb,OACC,yBAAKC,MAAM,UACV,wE,GAJiBC,aCiBNC,E,kDAhBd,WAAYC,GAAO,IAAD,8BAClB,cAAMA,IACDC,MAAM,CACVC,WAAa,EAAKF,MAAMG,KAHP,E,qDAQlB,OACC,6BACQ,4BAAKC,KAAKH,MAAMC,iB,GAXMJ,a,OC6BjBO,E,kDA5Bd,WAAYL,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACZK,OAAS,qFACTC,WAAa,gCAEd,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBANN,E,4DASFC,GACfA,EAAEC,iBACFP,KAAKQ,SAAU,CAACN,OAAS,0EACxBC,WAAa,4B,+BAMd,OACC,yBAAKV,MAAM,SAASgB,MAAM,OACzB,yBAAKC,IAAOV,KAAKH,MAAMK,OAAQS,IAAI,SAASF,MAAM,QAClD,4BAAKT,KAAKH,MAAMM,YAChB,4BAAQS,QAASZ,KAAKI,iBAAtB,qB,GAvB0BS,IAAMnB,WCiBrBoB,MATf,SAAsBlB,GACrB,OACM,6BACE,4BAAQgB,QAAS,SAACN,GAAD,OAX1B,SAAqBS,EAAMT,GACxBA,EAAEC,iBAEFS,MAAMD,GAQwBE,CAAY,2BAA4BX,KAAKV,EAAMmB,QCHrEG,EARK,SAACtB,GACnB,OACE,yBAAKH,MAAM,UACT,2BAAIG,EAAMuB,QCODC,E,uKARb,OACC,yBAAK3B,MAAM,UACV,wD,GAJiBC,aCoBN2B,MAbf,WACE,OACE,yBAAK5B,MAAM,UACR,kBAAC,EAAD,MACA,kBAAC6B,EAAD,CAAmBvB,IAAI,qCACvB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcgB,KAAK,uBACnB,kBAAC,EAAD,CAAcI,KAAK,+CACnB,kBAAC,EAAD,QCLaI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.a0437ea7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div align=\"center\">\r\n\t\t\t\t<h3>TUGAS REACT JUMAT 25 SEPTEMBER 2020</h3>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass ClassModulPertama extends Component{\r\n\tconstructor(props){\r\n\tsuper(props)\t\r\n\tthis.state={\r\n\t\tketerangan : this.props.ket\r\n\t}\r\n}  \r\n\r\nrender(){\r\n\treturn(\r\n\t\t<div>\r\n          <h1>{this.state.keterangan}</h1>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n}\r\n\r\nexport default ClassModulPertama;","import React from 'react';\r\n\r\nclass ClassModelKedua extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tgambar : 'https://www.nativeindonesia.com/wp-content/uploads/2020/05/Candi-Jiwa-Karawang.jpg',\r\n\t\t\tpenjelasan : 'Candi Jiwa Batujaya Karawang'\r\n\t\t}\r\n\t\tthis.tampilkanGambar = this.tampilkanGambar.bind(this);\r\n\t}\r\n\r\n\ttampilkanGambar(e){\r\n\t\te.preventDefault();\t\t\r\n\t\tthis.setState ({gambar : 'https://cirebon.perdananews.com/wp-content/uploads/2020/05/karawang.jpg',\r\n\t\t\tpenjelasan : 'Taman i Love Karawang'\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div align=\"center\" width=\"40%\">\r\n\t\t\t\t<img src = {this.state.gambar} alt=\"gambar\" width=\"40%\"/>\r\n\t\t\t\t<h3>{this.state.penjelasan}</h3>\r\n\t\t\t\t<button onClick={this.tampilkanGambar}>Lihat Gambar</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ClassModelKedua;\r\n","import React from 'react';\r\n\r\nfunction handlePesan(kata, e){\r\n  \te.preventDefault()\r\n\r\n  \talert(kata);\r\n  }\r\n\r\n\r\n\r\nfunction FungsiModel1(props){\r\n\treturn(\r\n       <div>\r\n         <button onClick={(e) => handlePesan(\"BKPSDM Karawang - NIOMIC\", e)}>{props.kata}\r\n         </button>\r\n       </div>\r\n\t\t);\t\r\n}\r\n\r\nexport default FungsiModel1;","import React from 'react';\r\n\r\nconst FungsiModel2 =(props) => {\r\n  return(\r\n    <div align=\"center\">\r\n      <p>{props.teks}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FungsiModel2;\r\n","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div align=\"center\">\r\n\t\t\t\t<p>@BKPSM - NIOMIC 2020</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport Header from './pages/Header';\nimport ClassModelPertama from './pages/ClassModelPertama';\nimport ClassModelKedua from './pages/ClassModelKedua';\nimport FungsiModel1 from './pages/FungsiModel1';\nimport FungsiModel2 from './pages/FungsiModel2';\nimport Footer from './pages/Footer';\n\n\nfunction App() {\n  return (\n    <div align=\"center\">\n       <Header />\n       <ClassModelPertama ket=\"Karawang Kota Pangkal Perjuangan\" />\n       <ClassModelKedua />\n       <FungsiModel1 kata=\"Diklat Programming\"/>\n       <FungsiModel2 teks=\"Contoh Membuat Fungsi model 2 dengan props\" />\n       <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}